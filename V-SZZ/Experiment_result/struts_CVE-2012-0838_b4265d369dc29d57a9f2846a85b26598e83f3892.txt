5f54b8d087 (Maurizio Cucchiara 2011-08-10 17:59:54 +0000 92)         conversionErrors.put("foo", "' + #root + '");
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 30)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 31)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 35)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 37)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 41)  * The capability of auto-repopulating the stack with a fake parameter map when 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 42)  * a conversion error has occurred can be done with 'repopulateField' property 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 43)  * set to "true". 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 47)  * This is typically usefull when one wants to repopulate the field with the original value 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 48)  * when a conversion error occurred. Eg. with a textfield that only allows an Integer 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 51)  * porperty set to true, it will, meaning the textfield will have 'one' as its value 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 53)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 55)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 57)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 60)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 64)  *   &lt;ww:textfield 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 68)  *   &lt;ww:submit /&gt;       
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 70)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 73)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 76)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 91)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 94)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 95)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 98)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 102)  *    
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 104)  *    public void setMyIntegerField(Integer myIntegerField) { 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 105)  *       this.myIntegerField = myIntegerField; 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 108)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 111)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 112)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 115)  * 
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 173)                 if (tmpValue != null && (tmpValue.length > 0)) {
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 175)                     fakeParams.put(fullFieldName, "'" + tmpValue[0] + "'");
1219e49516 (Johannes Geppert 2011-05-03 17:53:55 +0000 178)                 	LOG.warn("value is an empty array of String or with first element in it as null [" + value + "], will not repopulate conversion error ");
0c543aef31 (Lukasz Lenart 2010-02-18 08:22:46 +0000 184)                 fakeParams.put(fullFieldName, "'" + tmpValue + "'");
c01d3a92db src/test/com/opensymphony/webwork/interceptor/WebWorkConversionErrorInterceptorTest.java (Donald J. Brown 2006-03-23 22:10:58 +0000 73)         conversionErrors.put("foo", new Long(123));
c01d3a92db src/java/com/opensymphony/webwork/interceptor/WebWorkConversionErrorInterceptor.java (Donald J. Brown 2006-03-23 22:10:58 +0000 83)             return "'" + stack.findValue("top", String.class) + "'";
